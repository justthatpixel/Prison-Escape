#BlueJ class context
comment0.target=Game
comment0.text=\ \r\n\ Main\ class\ that\ holds\ the\ game\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment10.params=
comment10.target=void\ randomRoom()
comment10.text=\r\n\ Random\ number\ generator\ sends\ you\ to\ a\ random\ room\r\n
comment11.params=
comment11.target=void\ printHelp()
comment11.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
comment12.params=command
comment12.target=void\ goRoom(Command)
comment12.text=\ \r\n\ Try\ to\ in\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n\ Returns\ all\ the\ objects\ in\ the\ current\ Room\r\n
comment13.params=command
comment13.target=void\ pickItem(Command)
comment13.text=\ \r\n\ Pick\ up\ item\ From\ Room\ and\ put\ in\ Player's\ inventory\r\n\ First\ check\ secondWord\ equals\ to\ an\ item\ in\ the\ room\ before\ continuing\r\n\ Add\ the\ valid\ item\ to\ Player's\ inventory\ (arrayList)\r\n\ Remove\ item\ from\ Room\ (arrayList)\r\n\ If\ there\ are\ no\ items\ in\ the\ room\ we\ once\ again\ ask\ Player\ what\ they\ would\ like\ to\ do\r\n
comment14.params=command
comment14.target=void\ removeItem(Command)
comment14.text=\ \r\n\ \ Removes\ Item\ From\ Player's\ Inventory\ and\ Adds\ Item\ to\ Room\r\n\r\n
comment15.params=command
comment15.target=boolean\ quit(Command)
comment15.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment2.params=
comment2.target=void\ createRooms()
comment2.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n\ Create\ all\ objects\ and\ assign\ weights\ to\ object\r\n
comment3.params=
comment3.target=void\ play()
comment3.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n\ \ Enemy\ "Prisoner"\ is\ introduced,\ once\ the\ enemy\ health\=0\ they\ may\ continue\ with\ the\ game\r\n\ \ Turn\ based\ mini-game\ is\ run\ here,\ once\ enemy\ has\ been\ defeated\ they\ may\ continue\ with\ the\ game\r\n
comment4.params=
comment4.target=void\ printWelcome()
comment4.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment5.params=command
comment5.target=boolean\ processCommand(Command)
comment5.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment6.params=
comment6.target=void\ winCondition()
comment6.text=\r\n\ If\ the\ player\ has\ the\ "shovel"\ and\ is\ in\ the\ room\ "cell",\ they\ may\ use\ the\ command\ "dig"\ which\ allows\ them\ to\ Win\ the\ game\r\n\ command\ words.\r\n
comment7.params=
comment7.target=void\ goBack()
comment7.text=\r\n\ "back"\ command,\ takes\ you\ to\ previous\ room\r\n\ When\ "go"\ command\ is\ used,\ previous\ room\ \ is\ updated\ \r\n\ Sets\ currentRoom\=previousrooom\r\n
comment8.params=command
comment8.target=void\ importantNPCItem(Command)
comment8.text=\r\n\ Extend\ Parser\ to\ Scan\ 3\ words\r\n\ If\ valid\ command\ inputted,\ returns\ "shovel"\ to\ players\ inventory,\ nothing\ otherwise\r\n
comment9.params=
comment9.target=void\ NPCspeechOptions()
comment9.text=\r\n\ Print\ out\ Npc\ description,\ e.g\ ("Dwarf\ sits\ in\ the\ corner")\r\n\ Purpose\ is\ to\ tell\ player\ NPC\ is\ in\ the\ room\r\n
numComments=16
